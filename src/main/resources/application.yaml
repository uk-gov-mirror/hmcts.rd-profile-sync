server:
  port: 8093

management:
  endpoints:
    jmx:
      exposure:
        include: 'health'
    web:
      base-path: "/"
  endpoint:
    health:
      show-details: "always"

spring:
  application:
    name: RD Profile SYNC API
  main:
    allow-bean-definition-overriding: true
  jackson.date-format: yyyy-MM-dd
  flyway.enabled: true

  ### database configuration
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5428}/${POSTGRES_NAME:dbsyncdata}${POSTGRES_CONNECTION_OPTIONS:?}
    username: ${POSTGRES_USERNAME:dbsyncdata}
    password: ${POSTGRES_PASSWORD:dbsyncdata}
    properties:
      charSet: UTF-8
    tomcat:
      max-active: 10
      max-idle: 10
      min-idle: 2
      max-wait: 10000
      test-on-borrow: true
      test-on-connect: true
      test-on-idle: true
      validation-query: "SELECT 1"
      time-between-eviction-runs-millis: 10000
      test-while-idle: true
      test-on-return: true
      remove-abandoned: true
      remove-abandoned-timeout: 60
      log-abandoned: true
      abandon-when-percentage-full: 0
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
security:
  anonymousPaths:
    - "/"
    - "/health"
    - "/health/liveness"
    - "/actuator/**"
    - "/loggers/**"

### dependency configuration
idam:
  api:
    url: ${IDAM_URL:https://idam-api.demo.platform.hmcts.net}
    client-id: ${OAUTH2_CLIENT_ID:rd-professional-api}
    redirect-uri: ${OAUTH2_REDIRECT_URI:https://rd-professional-api-demo.service.core-compute-demo.internal/oauth2redirect}
    authorization: ${OAUTH2_AUTH:YWRtaW4ucmVmZGF0YUBobWN0cy5uZXQ6Q2hhbjllLW1lCgo=}
    client-authorization: ${OAUTH2_CLIENT_AUTH:cmQtcHJvZmVzc2lvbmFsLWFwaTpjYzVmMmE2LTk2OTAtMTFlOS1iYzQyLTUyNmFmNzc2NGY2NA==}

  s2s-auth:
    totp_secret: ${S2S_SECRET:K6KA6PRLRFWQLSD6}
    microservice: rd_professional_api
    url: ${S2S_URL:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}

# Scheduler configuration
scheduler:
  config: ${CRON_SCHEDULE:0 0/15 * * * *}
  hours: ${SEARCH_QUERY_FROM:2h}

userprofile:
  api:
    url: ${USER_PROFILE_URL:http://rd-user-profile-api-demo.service.core-compute-demo.internal}

loggingComponentName: RD_Profile_Sync
